version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: seth-clinic-db-prod
    environment:
      POSTGRES_DB: seth_clinic
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./database/seed.sql:/docker-entrypoint-initdb.d/02-seed.sql
    networks:
      - seth-clinic-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Redis for job queue and caching
  redis:
    image: redis:7-alpine
    container_name: seth-clinic-redis-prod
    command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    networks:
      - seth-clinic-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # MongoDB for unstructured data and analytics
  mongodb:
    image: mongo:7.0
    container_name: seth-clinic-mongodb-prod
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
      MONGO_INITDB_DATABASE: seth_clinic_mongo
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./database/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - seth-clinic-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: seth-clinic-backend-prod
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/seth_clinic
      MONGODB_URL: mongodb://admin:${MONGODB_PASSWORD}@mongodb:27017/seth_clinic_mongo?authSource=admin
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      LOG_LEVEL: info
      # SHA configuration
      SHA_API_URL: ${SHA_API_URL}
      SHA_PROVIDER_CODE: ${SHA_PROVIDER_CODE}
      SHA_FACILITY_LEVEL: ${SHA_FACILITY_LEVEL}
      SHA_SUBMISSION_TIMEOUT_MS: ${SHA_SUBMISSION_TIMEOUT_MS}
      SHA_REQUIRE_INVOICE_BEFORE_SUBMISSION: ${SHA_REQUIRE_INVOICE_BEFORE_SUBMISSION}
      SHA_AUTO_SUBMIT_CLAIMS: ${SHA_AUTO_SUBMIT_CLAIMS}
      SHA_PAYMENT_CHECK_INTERVAL_HOURS: ${SHA_PAYMENT_CHECK_INTERVAL_HOURS}
      SHA_EXPORT_RETENTION_DAYS: ${SHA_EXPORT_RETENTION_DAYS}
      SHA_DOCUMENT_MAX_SIZE_MB: ${SHA_DOCUMENT_MAX_SIZE_MB}
      SHA_BATCH_SIZE_LIMIT: ${SHA_BATCH_SIZE_LIMIT}
      # M-Pesa configuration
      MPESA_CONSUMER_KEY: ${MPESA_CONSUMER_KEY}
      MPESA_CONSUMER_SECRET: ${MPESA_CONSUMER_SECRET}
      MPESA_SHORTCODE: ${MPESA_SHORTCODE}
      MPESA_PASSKEY: ${MPESA_PASSKEY}
      MPESA_BASE_URL: ${MPESA_BASE_URL}
      MPESA_CALLBACK_URL: ${MPESA_CALLBACK_URL}
      # Email configuration
      SENDGRID_API_KEY: ${SENDGRID_API_KEY}
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      # File storage
      STORAGE_TYPE: ${STORAGE_TYPE}
      STORAGE_PATH: ${STORAGE_PATH}
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    volumes:
      - uploads_data:/app/uploads
      - exports_data:/app/exports
      - backups_data:/app/backups
    networks:
      - seth-clinic-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Background Worker
  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: seth-clinic-worker-prod
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/seth_clinic
      MONGODB_URL: mongodb://admin:${MONGODB_PASSWORD}@mongodb:27017/seth_clinic_mongo?authSource=admin
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379
      JWT_SECRET: ${JWT_SECRET}
      LOG_LEVEL: info
      # SHA configuration for worker
      SHA_API_URL: ${SHA_API_URL}
      SHA_PROVIDER_CODE: ${SHA_PROVIDER_CODE}
      SHA_PAYMENT_CHECK_INTERVAL_HOURS: ${SHA_PAYMENT_CHECK_INTERVAL_HOURS}
      STORAGE_TYPE: ${STORAGE_TYPE}
      STORAGE_PATH: ${STORAGE_PATH}
      # Currency configuration
      DEFAULT_CURRENCY: ${DEFAULT_CURRENCY}
      CURRENCY_LOCALE: ${CURRENCY_LOCALE}
      CURRENCY_SYMBOL: ${CURRENCY_SYMBOL}
    command: npm start
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    volumes:
      - uploads_data:/app/uploads
      - exports_data:/app/exports
      - backups_data:/app/backups
    networks:
      - seth-clinic-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # Frontend (Next.js)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: seth-clinic-frontend-prod
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
      NEXT_PUBLIC_APP_VERSION: ${NEXT_PUBLIC_APP_VERSION}
      NEXT_PUBLIC_ENVIRONMENT: production
      # Currency configuration
      NEXT_PUBLIC_DEFAULT_CURRENCY: ${DEFAULT_CURRENCY}
      NEXT_PUBLIC_CURRENCY_LOCALE: ${CURRENCY_LOCALE}
      NEXT_PUBLIC_CURRENCY_SYMBOL: ${CURRENCY_SYMBOL}
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - seth-clinic-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

volumes:
  postgres_data:
  redis_data:
  mongodb_data:
  uploads_data:
  exports_data:
  backups_data:

networks:
  seth-clinic-network:
    driver: bridge
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: seth-clinic-db-prod
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-seth_clinic}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    networks:
      - seth-clinic-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for job queue and caching
  redis:
    image: redis:7-alpine
    container_name: seth-clinic-redis-prod
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - seth-clinic-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: seth-clinic-backend-prod
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-seth_clinic}
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      PORT: 5000
      CORS_ORIGIN: ${FRONTEND_URL}
      # Prescription system specific variables
      LOG_LEVEL: ${LOG_LEVEL:-info}
      ENABLE_AUDIT_LOGGING: ${ENABLE_AUDIT_LOGGING:-true}
      # Currency configuration
      DEFAULT_CURRENCY: ${DEFAULT_CURRENCY:-KES}
      CURRENCY_LOCALE: ${CURRENCY_LOCALE:-en-KE}
      CURRENCY_SYMBOL: ${CURRENCY_SYMBOL:-KES}
      AUTO_SAVE_INTERVAL: ${AUTO_SAVE_INTERVAL:-30000}
      # M-Pesa Integration
      MPESA_CONSUMER_KEY: ${MPESA_CONSUMER_KEY}
      MPESA_CONSUMER_SECRET: ${MPESA_CONSUMER_SECRET}
      MPESA_SHORTCODE: ${MPESA_SHORTCODE}
      MPESA_PASSKEY: ${MPESA_PASSKEY}
      MPESA_CALLBACK_URL: ${MPESA_CALLBACK_URL}
      # SHA Insurance Integration
      SHA_API_URL: ${SHA_API_URL}
      SHA_API_KEY: ${SHA_API_KEY}
    ports:
      - "${BACKEND_PORT:-5000}:5000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - seth-clinic-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Background Worker
  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: seth-clinic-worker-prod
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-seth_clinic}
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379
      JWT_SECRET: ${JWT_SECRET}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      # SHA Insurance Integration
      SHA_API_URL: ${SHA_API_URL}
      SHA_API_KEY: ${SHA_API_KEY}
      # Currency configuration
      DEFAULT_CURRENCY: ${DEFAULT_CURRENCY:-KES}
      CURRENCY_LOCALE: ${CURRENCY_LOCALE:-en-KE}
      CURRENCY_SYMBOL: ${CURRENCY_SYMBOL:-KES}
      # M-Pesa Integration
      MPESA_CONSUMER_KEY: ${MPESA_CONSUMER_KEY}
      MPESA_CONSUMER_SECRET: ${MPESA_CONSUMER_SECRET}
    command: npm run worker
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - seth-clinic-network
    restart: unless-stopped

  # Frontend (Next.js)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: seth-clinic-frontend-prod
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
      NEXT_PUBLIC_APP_VERSION: ${APP_VERSION:-1.0.0}
      NEXT_PUBLIC_ENVIRONMENT: production
      # Currency configuration
      NEXT_PUBLIC_DEFAULT_CURRENCY: ${DEFAULT_CURRENCY:-KES}
      NEXT_PUBLIC_CURRENCY_LOCALE: ${CURRENCY_LOCALE:-en-KE}
      NEXT_PUBLIC_CURRENCY_SYMBOL: ${CURRENCY_SYMBOL:-KES}
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - seth-clinic-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: seth-clinic-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - seth-clinic-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  seth-clinic-network:
    driver: bridge
